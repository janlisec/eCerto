install.packages("outliers")
install.packages("plyr")
install.packages("shinyjs")
shiny::runApp('BAMTool')
install.packages("Rcpp")
shiny::runApp('BAMTool')
shiny::runApp('BAMTool')
install.packages("rlang")
shiny::runApp('BAMTool')
shiny::runApp('BAMTool')
remove.packages("dc")
#'BAMTool
#'Modul: Zertifizierung
#'Dixon
#'lab_means : data.frame
Dixon <- function(lab_means=NULL) {
out <- data.frame("Dixon_p"=rep(NA,nrow(lab_means)), row.names=row.names(lab_means))
x <- lab_means[,"mean"]
smallest_is_extreme <- (max(x) - mean(x)) <= (mean(x) - min(x))
if (nrow(lab_means)>=3) out$Dixon_p[which.max(lab_means$mean)] <- outliers::dixon.test(x=lab_means$mean, type = 0, two.sided = FALSE, opposite = ifelse(smallest_is_extreme,TRUE,FALSE))$p.value
if (nrow(lab_means)>=3) out$Dixon_p[which.min(lab_means$mean)] <- outliers::dixon.test(x=lab_means$mean, type = 0, two.sided = FALSE, opposite = ifelse(smallest_is_extreme,FALSE,TRUE))$p.value
out$Dixon_p <- sapply(out$Dixon_p, function(x) { ifelse(is.na(x),".",ifelse(x<0.01,".01",ifelse(x<0.05,".05","n.s."))) })
return(out)
}
shiny::runApp('BAMTool')
remove.packages("Rcpp")
shiny::runApp('BAMTool')
setwd("C:/Users/jlisec/Documents/Projects/BAMTool/")
setwd("C:/Users/fkress")
setwd("C:/Users/fkress/R/Portable_Work_Directory/BAMTool")
shiny::runApp()
library(Rcpp)
