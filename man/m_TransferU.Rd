% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m_transferU.R
\name{m_transferU}
\alias{m_transferU}
\alias{m_TransferUUI}
\alias{m_TransferUServer}
\title{m_TransferU}
\usage{
m_TransferUUI(id)

m_TransferUServer(
  id,
  dat = shiny::reactive({     NULL }),
  mat_tab = shiny::reactive({     NULL })
)
}
\arguments{
\item{id}{Name when called as a module in a shiny app.}

\item{dat}{Homogeneity or Stability data (reactive).}

\item{mat_tab}{materialtabelle to be transferred to (reactive).}
}
\value{
A modified materialtabelle where values in specified U column are merged with U source.
}
\description{
\code{m_TransferU} will provide a module to transfer the Uncertainty
data in the correct format to the 'materialtable'. After Certification data
(initiating the material table) and Homogeneity or Stability data has been uploaded, it shows
the possible columns of materialtable to transfer to.
}
\details{
not yet
}
\examples{
if (interactive()) {
mt <- data.frame("analyte"=LETTERS[1:6], "U1"=NA)
attr(mt, "col_code") <- data.frame("ID"=c("F1","U1"), "Name"=c("bla","U_test"))
ud <- data.frame("analyte"=rep(c("A","C","D"),2), "H_type"=gl(2,3),
                 "s_bb"=rep(c(0,1,0.5),2), "s_bb_min"=rep(c(1,NA,0.5),2))
test <- ecerto::reactiveClass$new(list("ud"=ud, "mt"=mt))
shiny::shinyApp(
 ui = shiny::fluidPage(
   m_TransferUUI(id = "test")
 ),
 server = function(input, output, session) {
   m_TransferUServer(id = "test",
     dat = shiny::reactive({ecerto::getValue(test, "ud")}),
     mat_tab = shiny::reactive({ecerto::getValue(test, "mt")})
   )
 }
)
}

}
