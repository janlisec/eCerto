% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExcelUploadControl.R
\name{ExcelUpload}
\alias{ExcelUpload}
\alias{m_ExcelUpload_UI}
\alias{m_ExcelUpload_Server}
\title{ExcelUpload.}
\usage{
m_ExcelUpload_UI(id)

m_ExcelUpload_Server(id, excelformat, check, silent = FALSE)
}
\arguments{
\item{id}{Name when called as a module in a shiny app.}

\item{excelformat}{Selector for dataset type (reactive).}

\item{check}{Check if 'excelformat' dataset has been uploaded (FALSE) or not (TRUE) (reactive).}

\item{silent}{Option to print or omit status messages.}
}
\value{
A reactiveVal containing desired data
}
\description{
\code{ExcelUpload} will provide a module to upload excel data files.
}
\details{
not yet
}
\examples{
if (interactive()) {
shiny::shinyApp(
 ui = shiny::fluidPage(
   shiny::selectInput(inputId = "excelformat", label = "excelformat",
     choices = c("Certification","Homogeneity","Stability")),
   shiny::hr(),
   m_ExcelUpload_UI(id = "test")
 ),
 server = function(input, output, session) {
  out <- m_ExcelUpload_Server(
    id = "test",
    excelformat = reactive({input$excelformat}),
    check = reactive({TRUE}))
  #observeEvent(out(), {print(out())})
 }
)
}

}
