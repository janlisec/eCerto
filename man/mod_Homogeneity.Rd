% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/homogeneity.R
\name{mod_Homogeneity}
\alias{mod_Homogeneity}
\alias{m_HomogeneityUI}
\alias{m_HomogeneityServer}
\title{HOMOGENEITY MODULE}
\usage{
m_HomogeneityUI(id)

m_HomogeneityServer(id, homog, cert, datreturn)
}
\arguments{
\item{id}{Name when called as a module in a shiny app.}

\item{homog}{The Homogeneity table - shiny::reactive({getValue(rv,"Homogeneity")}).}

\item{cert}{The Certification table - shiny::reactive({getValue(rv,"Certification")}).}

\item{datreturn}{session-only reactiveValues --> for transfer Module}
}
\value{
h_vals = The Homogeneity data (not the transferred ones yet)
}
\description{
\code{m_Homogeneity} is the module for handling Homogeneity Data
}
\details{
not yet
}
\examples{
if (interactive()) {
shiny::shinyApp(
 ui = shiny::fluidPage(
   m_HomogeneityUI(id = "test")
 ),
 server = function(input, output, session) {
   rv <- reactiveClass$new(init_rv()) # initiate persistent variables
   datreturn = ecerto:::test_datreturn()
   m_HomogeneityServer(
     id = "test",
     homog = shiny::reactive({test_homog()}),
     cert = shiny::reactive({test_certification()}),
     datreturn = datreturn
   )
 }
)
}

}
